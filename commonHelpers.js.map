{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('[data-start]');\nconst datetimePicker = document.querySelector('#datetime-picker');\nlet timerInterval;\n\nstartButton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(datetimePicker, options);\n\nstartButton.addEventListener('click', () => {\n  const selectedDate = new Date(datetimePicker.value);\n  startButton.disabled = true;\n  datetimePicker.disabled = true;\n\n  timerInterval = setInterval(() => {\n    const now = new Date();\n    const remainingTime = selectedDate - now;\n\n    if (remainingTime <= 0) {\n      clearInterval(timerInterval);\n      updateTimer(0, 0, 0, 0);\n      datetimePicker.disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(remainingTime);\n    updateTimer(days, hours, minutes, seconds);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer(days, hours, minutes, seconds) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startButton","datetimePicker","timerInterval","options","selectedDates","iziToast","flatpickr","selectedDate","remainingTime","updateTimer","days","hours","minutes","seconds","convertMs","ms","addLeadingZero","value"],"mappings":"2FAKA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAiB,SAAS,cAAc,kBAAkB,EAChE,IAAIC,EAEJF,EAAY,SAAW,GAEvB,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACAA,EAAc,CAAC,GAChB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDL,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEAM,EAAUL,EAAgBE,CAAO,EAEjCH,EAAY,iBAAiB,QAAS,IAAM,CAC1C,MAAMO,EAAe,IAAI,KAAKN,EAAe,KAAK,EAClDD,EAAY,SAAW,GACvBC,EAAe,SAAW,GAE1BC,EAAgB,YAAY,IAAM,CAEhC,MAAMM,EAAgBD,EADV,IAAI,KAGhB,GAAIC,GAAiB,EAAG,CACtB,cAAcN,CAAa,EAC3BO,EAAY,EAAG,EAAG,EAAG,CAAC,EACtBR,EAAe,SAAW,GAC1B,MACD,CAED,KAAM,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAa,EACjEC,EAAYC,EAAMC,EAAOC,EAASC,CAAO,CAC1C,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASJ,EAAYC,EAAMC,EAAOC,EAASC,EAAS,CAClD,SAAS,cAAc,aAAa,EAAE,YAAcG,EAAeN,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcM,EAAeL,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCK,EAAeJ,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCI,EAAeH,CAAO,CAC1B,CAEA,SAASG,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}